#include <msp430.h> 


/**
 * main.c
 */
#include <msp430.h>

//TIMER
void main(void)
{
    WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
    P1DIR |= (BIT0 + BIT6);
    P1OUT &= 0x00; // Set the LEDs off
                   // CCR0 interrupt enabled
    TA0CTL = TASSEL_2 + MC_1 + ID_3;           // SMCLK/8, upmode
    TA0CCTL0 = CCIE;
    TA0CCR0 =  0xFFFF;  //Number timer counts to
    DIVS = 3;
    P1DIR |= (BIT0);
    P1DIR |= (BIT0);
    P1OUT |= (BIT0);
    P1IE |= (BIT1);       //Enables interrupts for P1 Bit 1
    P1IES |= BIT1;
    P1REN |= (BIT1);    //Enables the resistor for P1 Bit 1
    P1OUT |= (0x03);
    P1OUT |= (BIT1);//Sets the resistor for P1 Bit 1 to Pull Up
    P1IFG &= ~(BIT1);   //The interrupt flag is cleared


    //enable all interrupts
    __bis_SR_register(GIE); // LPM0 with interrupts enabled

}


// Timer A0 interrupt service routine
#pragma vector=TIMER0_A0_VECTOR
__interrupt void TIMER0_A0_ISR (void)
{
        P1IE |= BIT1;       // Toggle P1.0
        P1IES |= BIT1;
}


//Port 1 interrupt service routine
#pragma vector=PORT2_VECTOR
__interrupt void Port_2(void)
{
    P1OUT ^= BIT0;
    P1IE &= ~BIT1;
    if(P1IES == BIT1){
        P1IES &= ~BIT1;
        TA0R = 0;
    }


}
